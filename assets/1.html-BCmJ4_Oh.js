import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as t,b as n,d as r,e as i,o as c}from"./app-CRQ0i486.js";const s={};function d(m,e){return c(),a("div",null,[e[0]||(e[0]=t("p",null,[i("This is an article about my first contact with "),t("code",null,"FastAPI")],-1)),n(" more "),e[1]||(e[1]=r('<h2 id="explanation" tabindex="-1"><a class="header-anchor" href="#explanation"><span>Explanation</span></a></h2><div class="hint-container tip"><p class="hint-container-title">Insights</p><p>I think <code>FastAPI</code> can automatically generate <code>Swagger</code> documents, which is very good. Moreover, <code>FastAPI</code> has a unique performance advantage among python web frameworks (but not to belitten other Web frameworks). Therefore, among python web frameworks, I still chose <code>FastAPI</code> for learning. Before this, I also used <code>Django</code> for template development and front-end and back-end separation development. However, I found that once I didn&#39;t use <code>Django</code> for a long time, I needed to consume some learning costs. Similarly, I think the project structure of <code>Django</code> is a bit large. After I came into contact with <code>FastAPI</code>, I felt that the writing style of <code>FastAPI</code> is somewhat similar to nest, with a more annotated style. So, in the python web framework in the future, I should continue to learn to use <code>FastAPI</code>, carry out more development of front-end and back-end separation projects, and gradually understand and learn <code>FastAPI</code>.</p></div>',2))])}const h=o(s,[["render",d]]),u=JSON.parse('{"path":"/posts/technology/1.html","title":"First experience with FastAPI","lang":"en-US","frontmatter":{"title":"First experience with FastAPI","icon":null,"date":"2025-06-17T00:00:00.000Z","category":["technology"],"tag":["learning"],"sticky":true,"star":true,"order":1,"description":"This is an article about my first contact with FastAPI","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"First experience with FastAPI\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-06-17T00:00:00.000Z\\",\\"dateModified\\":\\"2025-06-18T01:20:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Rmc\\",\\"url\\":\\"https://mister-hope.com\\"}]}"],["meta",{"property":"og:url","content":"https://rmc-cf.github.io/rmc-blog/posts/technology/1.html"}],["meta",{"property":"og:site_name","content":"Rmc"}],["meta",{"property":"og:title","content":"First experience with FastAPI"}],["meta",{"property":"og:description","content":"This is an article about my first contact with FastAPI"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T01:20:00.000Z"}],["meta",{"property":"article:tag","content":"learning"}],["meta",{"property":"article:published_time","content":"2025-06-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T01:20:00.000Z"}]]},"git":{"createdTime":1750139685000,"updatedTime":1750209600000,"contributors":[{"name":"rmc-cf","username":"rmc-cf","email":"rmcyyds@gamil.com","commits":5,"url":"https://github.com/rmc-cf"}]},"readingTime":{"minutes":0.72,"words":215},"filePathRelative":"posts/technology/1.md","excerpt":"<p>This is an article about my first contact with <code>FastAPI</code></p>\\n","autoDesc":true}');export{h as comp,u as data};
